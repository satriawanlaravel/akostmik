<?php namespace App\Controllers;use App\Controllers\BaseController;use View;use App\Models\Mahasiswa;use App\Models\MasterData;use App\Models\Kelas;use App\Models\Jadwal;use App\Models\Jawaban;use App\Models\Matakuliah;use App\Models\Pertanyaan;use App\Models\Krs;use Validator;use Redirect;use Session;use Sentry;use DB;use Input;class KuesionerController extends BaseController {    public function index() {        $nimuser = Sentry::getUser()->nim;        $getmatkul = Krs::where('nim', '=', $nimuser)->get();        $getprofil = Mahasiswa::where('nim', '=', $nimuser)->get()->first();        $getdatamatkul = array(            'getmatkul' => $getmatkul,            'getprofil' => $getprofil,            );        return View::make('kuesioner.index', $getdatamatkul);    }    public function isiKuis($kode_matakuliah){        $nimuser = Sentry::getUser()->nim;        $getprofil = Mahasiswa::where('nim', '=', $nimuser)->get()->first();        $pertanyaan = Pertanyaan::all();        $pilihmatkul = DB::table('prodi')        ->join('mahasiswa','prodi.kode_prodi','=','mahasiswa.kode_prodi')        ->join('krs','krs.nim','=','mahasiswa.nim')        ->join('matakuliah','matakuliah.kode_matakuliah','=','krs.kode_matakuliah')        ->join('jadwal','jadwal.id_krs','=','krs.id_krs')        ->join('dosen','dosen.nik','=','jadwal.nik')        ->join('kelas','kelas.idkelas','=','jadwal.idkelas')        ->where('mahasiswa.nim','=',$nimuser)        ->where('matakuliah.kode_matakuliah','=',$kode_matakuliah)        ->get();        $datakuesioner = [        'getprofil' => $getprofil,        'pertanyaan' => $pertanyaan,        'pilihmatkul' => $pilihmatkul        ];        // dd($pilihmatkul);              if(($pilihmatkul) == null){            Session::flash('msge','Maaf....<br> Belum ada jadwal pengisian kuesioner untuk matakuliah bersangkutan.');            return Redirect::to('mahasiswa/kuesioner');               }else{            return View::make('kuesioner.isiKuis', $datakuesioner);        }    }    public function saveKuis(){      $data = Input::all();      echo  "<pre>";      $rules = [      'kode_pertanyaan' => 'required',      'kritiksaran' => 'required',      'idjadwal' => 'required'      ];      $validator = Validator::make(Input::all(),$rules);      if($validator->fails()){        return Redirect::to('mahasiswa/kuesioner')        ->with('msge', $validator->messages());    }else{                    $counter = 0;        # validasi pengisian 2 kali        $input = Input::get('idjadwal');        $ceksoal = DB::table('Pertanyaan')->count();        $cek = DB::table('Jawaban')->where('idjadwal','=',$input)->count();                    if($cek >= $ceksoal){            return Redirect::to('mahasiswa/kuesioner')->with('msge', 'Maaf....<br>Anda sudah pernah mengisi kuesioner matakuliah tersebut.');        }else{            foreach ($data['kode_pertanyaan'] as $key => $value) {                $datakuis = array(                    'kode_pertanyaan' => $value,                    'jawabanganda' => isset($data['jawabanganda'][$key])? $data['jawabanganda'][$key]:5,                    'tanggal_pengisian' => \Carbon\Carbon::now(),                    'kritiksaran' => Input::get('kritiksaran'),                    'idjadwal' => trim(Input::get('idjadwal')),                    );                              $tambah = Jawaban::create($datakuis);                if($tambah)                    $counter++;            }           }        if($counter > 0){            Session::flash('msgs','Terimah Kasih<br> Anda telah mengisi kuesioner PBM!');        }else{            Session::flash('msge','Maaf....<br>, silahkan mencoba kembali dan perhatikan ketentuan yang berlaku');        }        return Redirect::to('mahasiswa/kuesioner');    }}}